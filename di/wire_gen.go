// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/google/wire"
	"github.com/runetale/runevision/database"
	"github.com/runetale/runevision/domain/config"
	"github.com/runetale/runevision/handler"
	"github.com/runetale/runevision/interactor"
	"github.com/runetale/runevision/interfaces"
	"github.com/runetale/runevision/localclient"
	"github.com/runetale/runevision/repository"
	"github.com/runetale/runevision/utility"
)

// Injectors from wire.go:

func InitializeLogger(logConfig config.Log) *utility.Logger {
	logger := utility.MustNewLoggerFromConfig(logConfig)
	return logger
}

func InitializePostgres(dbConfig config.Postgres, logConfig config.Log) *database.Postgres {
	logger := utility.MustNewLoggerFromConfig(logConfig)
	postgres := database.MustNewPostgresFromConfig(logger, dbConfig)
	return postgres
}

func InitializeDashboardRepository() interfaces.DashboardRepository {
	dashboardRepository := repository.NewDashboardRepository()
	return dashboardRepository
}

func InitializeDashboardHandler(dbConfig config.Postgres, logConfig config.Log) interfaces.DashboardHandler {
	logger := utility.MustNewLoggerFromConfig(logConfig)
	postgres := database.MustNewPostgresFromConfig(logger, dbConfig)
	dashboardRepository := repository.NewDashboardRepository()
	dashboardInteractor := interactor.NewDashboardInteractor(postgres, dashboardRepository)
	dashboardHandler := handler.NewDashboardHandler(dashboardInteractor)
	return dashboardHandler
}

func InitializeHackHandler(dbConfig config.Postgres, logConfig config.Log) interfaces.HackHandler {
	logger := utility.MustNewLoggerFromConfig(logConfig)
	postgres := database.MustNewPostgresFromConfig(logger, dbConfig)
	localClient := localclient.NewLocalClient(logger)
	hackInteractor := interactor.NewHackInteractor(postgres, localClient)
	hackHandler := handler.NewHackHandler(hackInteractor)
	return hackHandler
}

// wire.go:

var wireSet = wire.NewSet(utility.WireSet, database.WireSet, handler.WireSet, interactor.WireSet, repository.WireSet, localclient.WireSet)
